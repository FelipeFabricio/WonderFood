name: CI-CD

on:
  push:
    branches:
      - master

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: | 
            6.0.x
            7.0.x

      - name: Restore packages 
        run: 
          dotnet restore
         
      - name: Build application
        run: 
          dotnet build --configuration Release
      
      - name: Run tests
        run: 
          dotnet test --no-build --configuration Release --verbosity normal

      - name: Login Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Build, Tag and Push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: wdf-ecr
          IMAGE_TAG: latest
          
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile .   
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  CD:
    runs-on: ubuntu-latest   
    needs: [CI]
    
    steps:    
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.29.1'
        id: install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-1

      - name: Set Context K8S
        run: aws eks update-kubeconfig --name wdf-eks-cluster --region us-east-1
#        uses: azure/k8s-set-context@v1
#        with:
#          kubeconfig: ${{ secrets.KUBECONFIG }}
#          method: kubeconfig

      - name: Set Context K8S 2
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
          method: kubeconfig
          
      - name: Debug Kubeconfig
        run: kubectl config view

      - name: Deploy to EKS
        run: kubectl apply -f deployment.yml
      
#      - name: Apply Migrations
#       run: dotnet ef database update --project src/WonderFood.Infra.Sql/WonderFood.Infra.Sql.csproj

        
